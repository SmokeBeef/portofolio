import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import Navbar from "@/components/Navbar";
import Footer from "@/components/Footer";
import TextAnimation from "@/components/TextAnimation";
import Carousel from "@/components/Carousel";
import { useEffect, useState } from "react";
import Card from "@/components/Card";
import { data } from "@/utils/data";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const size = useWindowSize();
  return (
    <>
      <Head>
        <title>Porto.Dev</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main
        id="top"
        className={`font-Poppins min-h- text-slate-50 bg-slate-900`}
      >
        <Navbar />

        <div className=" mx-auto bg-fixed -mt-16 bg-slate-900">
          <div className="px-4  mx-auto container flex items-center">
            <TextAnimation className="flex-1" />
            <div className="flex-1 ">
              <div className="font-mono bg-black rounded-md mx-10">
                <div className="flex justify-between">
                  <div className="flex gap-2 px-4 pt-3">
                    <span className="bg-red-600 inline-block w-3 h-3 rounded-full"></span>
                    <span className="bg-yellow-600 inline-block w-3 h-3 rounded-full"></span>
                    <span className="bg-green-500 inline-block w-3 h-3 rounded-full"></span>
                  </div>
                  {/* <p className="px-4 pt-3 text-end">data.json {"{}"}</p> */}
                </div>
                <div className="p-12">
                  {"{"}
                  <br />
                  <p className="indent-10 ">
                    <span className="text-purple-400">&quot;name&quot;</span>:{" "}
                    <span className="text-orange-500">&quot;Deva&quot;</span>
                  </p>
                  <p className="indent-10">
                    <span className="text-purple-400">
                      &quot;interest&quot;
                    </span>
                    :{" "}
                    <span className="text-orange-500">
                      &quot;Back End&quot;
                    </span>
                  </p>
                  <p className="indent-10">
                    &quot;nama&quot;: &quot;Deva&quot;
                  </p>
                  <p className="indent-10">&quot;nama&quot;: {"{"}</p>
                  <p className="indent-20"></p>
                  <p className="indent-20">&quot;nama&quot;: </p>
                  <p className="indent-10">{"}"} </p>

                  {"}"}
                </div>
              </div>
              {/* <div className="flex-1 bg-[url('/mypict.JPG')] w-full h-auto bg-center bg-contain bg-no-repeat rounded-full "> */}
              {/* <Image className="rounded-full " src='/mypict.JPG' alt="mypict" width={5184} height={3456} /> */}
            </div>
          </div>
          <div id="porto" className="bg-slate-900  min-h-screen">
            <h2 className="text-4xl text-center pt-28">My Project</h2>
            <div className="relative flex justify-center mx-4 ">
              <div
                id="slider"
                className=" w-full overflow-x-scroll  flex  py-4 scroll-smooth"
              >
                {data.map((value, index) => (
                  <Card
                    title={value.title}
                    class="mx-4 first:ml-0 first:pl-0  last:mr-0 last:pl-0"
                    key={index}
                    image={value.image}
                  >
                    <p className="">{value.desc}</p>
                  </Card>
                ))}
              </div>
            </div>
          </div>
        </div>
        <Footer />
      </main>
    </>
  );
}

function useWindowSize() {
  // Initialize state with undefined width/height so server and client renders match
  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/
  const [windowSize, setWindowSize] = useState({
    width: 0,
    height: 0,
  });

  useEffect(() => {
    // only execute all the code below in client side
    // Handler to call on window resize
    function handleResize() {
      // Set window width/height to state
      setWindowSize({
        width: window.innerWidth,
        height: window.innerHeight,
      });
    }

    // Add event listener
    window.addEventListener("resize", handleResize);

    // Call handler right away so state gets updated with initial window size
    handleResize();

    // Remove event listener on cleanup
    return () => window.removeEventListener("resize", handleResize);
  }, []); // Empty array ensures that effect is only run on mount
  return windowSize;
}
